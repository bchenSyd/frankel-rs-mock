type _distance {
  metres: Int
}

type _jockey {
  statistics: [String]
  name: String
}

type _meetingTrack {
  name: String
  state: String
}

type _otherRunners {
  position: String
  competitor: String
}

type _price {
  starting: String
}

type _prize {
  type: String
  value: String
}

type _restrictions {
  jockey: String
}

enum _TrackCondition {
  Good
  Heavy
  Slow
  Synthetic
}

type CompetitorForm {
  meetingDate: String
  track: TrackCondition
  distance: _distance
  classes: [String]
  eventPrizemoney: String
  starters: Int
  eventDuration: String
  jockey: _jockey
  weightCarried: Float
  barrier: String
  prices: _price
  decimalPrices: _price
  margin: String
  otherRunners: [_otherRunners]
  limitWeight: Float
  weightAdj: Float
  daysSinceLastRun: Int
  grade: String
  winningTime: String
  pir: String
  split: String
  place: String
  numberOfCompetitors: String
  raceNumber: String
}

type EventForm {
  eventId: Int
  startTime: String
  distance: _distance
  restrictions: _restrictions
  weightType: String
  classes: [String]
  prizes: [_prize]
}

type MeetingForm {
  date: String
  railPosition: String
  tabIndicator: String
  track: _meetingTrack
  races: [String]
  stage: String
  formOptions: [String]
}

type Query {
  meetingForm: MeetingForm
  eventForm: EventForm
  competitorForm: CompetitorForm
}

type TrackCondition {
  expectedCondition: _TrackCondition
  name: String
  track4CharAbbrev: String
  condition: _TrackCondition
}
